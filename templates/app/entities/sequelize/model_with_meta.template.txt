const { DataTypes, Model } = require('sequelize');
const { requireIfExists, Metas } = require("kainda");
const path = require("path");
const %%$MODEL_NAME_UPPERCASE$%%Meta = require("./meta/%%$MODEL_NAME_UPPERCASE$%%.meta.model");

class %%$MODEL_NAME_UPPERCASE$%% extends Model {

    // TODO: Fill this
    static create_required_keys = [

    ];

    // TODO: Fill this
    static updateable_keys = [

    ];

    // TODO: Change this when not needed
    static seed_options = {
        seed : true,
        dependencies: [
        ],
        is_seeded: false
    };

    // Meta info
    meta_class = %%$MODEL_NAME_UPPERCASE$%%Meta;
    identifier = "%%$MODEL_NAME_LOWERCASE$%%_id";
    createMeta = MetaInterface.createMeta;
    getMeta    = MetaInterface.getMeta;
    updateMeta = MetaInterface.updateMeta;
    deleteMeta = MetaInterface.deleteMeta;
    static get%%$MODEL_NAME_UPPERCASE$%%IdFromMeta    = async (meta_key, meta_value) => { return await MetaInterface.getIdFromMeta(meta_key, meta_value, %%$MODEL_NAME_UPPERCASE$%%Meta); }
    static get%%$MODEL_NAME_UPPERCASE$%%FromMeta      = async (meta_key, meta_value) => { return await %%$MODEL_NAME_UPPERCASE$%%.findByPk(await %%$MODEL_NAME_UPPERCASE$%%.get%%$MODEL_NAME_UPPERCASE$%%IdFromMeta(meta_key, meta_value)); }

}

%%$MODEL_NAME_UPPERCASE$%%.init({
    %%$MODEL_NAME_LOWERCASE$%%_id: {
        type: DataTypes.INTEGER,
        allowNull: false,
        primaryKey: true,
        autoIncrement: true,
    }
    // TODO: Create more fields for the model
}, {
    sequelize,
    modelName: '%%$MODEL_NAME_UPPERCASE$%%',
    tableName: '%%$MODEL_NAME_LOWERCASE$%%s', // TODO: Check if the table name is correct
    timestamps: true,
    paranoid: true,
});

%%$MODEL_NAME_UPPERCASE$%%.Controller = requireIfExists(path.join(__dirname, './%%$MODEL_NAME_LOWERCASE$%%.controller'));
%%$MODEL_NAME_UPPERCASE$%%.Exceptions = requireIfExists(path.join(__dirname, './%%$MODEL_NAME_LOWERCASE$%%.exceptions'));
%%$MODEL_NAME_UPPERCASE$%%.Routes = requireIfExists(path.join(__dirname, './%%$MODEL_NAME_LOWERCASE$%%.routes'));
%%$MODEL_NAME_UPPERCASE$%%.Seeders = requireIfExists(path.join(__dirname, './%%$MODEL_NAME_LOWERCASE$%%.seeders'));
%%$MODEL_NAME_UPPERCASE$%%.Middlewares = requireIfExists(path.join(__dirname, './%%$MODEL_NAME_LOWERCASE$%%.middlewares'));
%%$MODEL_NAME_UPPERCASE$%%.Validators = requireIfExists(path.join(__dirname, './%%$MODEL_NAME_LOWERCASE$%%.validators'));
%%$MODEL_NAME_UPPERCASE$%%.meta_class.seed_options.dependencies.push(%%$MODEL_NAME_UPPERCASE$%%);

/**
 * RELATIONSHIPS
 */



/**
 * HOOKS
 */


module.exports = %%$MODEL_NAME_UPPERCASE$%%;